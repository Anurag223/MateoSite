#region Header

// Schlumberger Private
// Copyright 2020 Schlumberger.  All rights reserved in Schlumberger
// authored and generated code (including the selection and arrangement of
// the source code base regardless of the authorship of individual files),
// but not including any copyright interest(s) owned by a third party
// related to source code or object code authored or generated by
// non-Schlumberger personnel.
// This source code includes Schlumberger confidential and/or proprietary
// information and may include Schlumberger trade secrets. Any use,
// disclosure and/or reproduction is prohibited unless authorized in
// writing.

#endregion

using System.Collections.Generic;
using System.Threading.Tasks;
using Tlm.Fed.Framework.Internal;
using Tlm.Fed.Models.Canonical.SiteDomain;
using Tlm.Sdk.Core.Data;
using Tlm.Sdk.Core.Models.Querying;

namespace Tlm.Fed.Contexts.Site.Composer
{
    public class WorkCenterSiteComposer : IInboundAlternateComposer
    {
        private readonly IReadOnlyRepo<WorkCenterSite> _repositoryHandler;

        public WorkCenterSiteComposer(IReadOnlyRepo<WorkCenterSite> repositoryHandler)
        {
            _repositoryHandler = repositoryHandler;
        }

        public async Task<IReadOnlyCollection<object>> ComposeAsync(IReadOnlyCollection<string> ids)
        {
            var entities = (await _repositoryHandler.QueryManyAsync(QuerySpec.ByIds(ids))).Collection;
            return entities;
        }
    }
}