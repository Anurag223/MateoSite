#region Header

// Schlumberger Private
// Copyright 2020 Schlumberger.  All rights reserved in Schlumberger
// authored and generated code (including the selection and arrangement of
// the source code base regardless of the authorship of individual files),
// but not including any copyright interest(s) owned by a third party
// related to source code or object code authored or generated by
// non-Schlumberger personnel.
// This source code includes Schlumberger confidential and/or proprietary
// information and may include Schlumberger trade secrets. Any use,
// disclosure and/or reproduction is prohibited unless authorized in
// writing.

#endregion

using System;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Serilog;
using Tlm.Fed.Adapters.Maximo.Common.Configuration;
using Tlm.Fed.Adapters.Maximo.Common.CustomException;
using Tlm.Fed.Adapters.Maximo.Site.Models;
using Tlm.Fed.Framework.Common;
using Tlm.Fed.Framework.Common.ServiceClient;

namespace Tlm.Fed.Adapters.Maximo.Site.Concrete
{
    public class GetMaximoSiteChunk : IActionHandler<MaximoSiteQuery, SAP_R_LOCATIONS_LOCATIONSType>
    {
        private readonly ILogger _logger;
        private readonly IHttpService _httpService;
        private readonly MaximoEndpointConfig _maximoConfig;

        public GetMaximoSiteChunk(IHttpService httpService, MaximoEndpointConfig maximoConfig)
        {
            _logger = Log.Logger.ForContext(GetType());
            _httpService = httpService;
            _maximoConfig = maximoConfig;
        }

        public async Task<SAP_R_LOCATIONS_LOCATIONSType> Handle(MaximoSiteQuery query)
        {
            var maximoSiteRequestBuilder = new MaximoSiteRequestBuilder(_maximoConfig);

            if (query.PageNumber.HasValue)
                maximoSiteRequestBuilder.WithStartIndex(query.PageNumber.Value);
            if (!string.IsNullOrWhiteSpace(query.SubBusinessLine))
                maximoSiteRequestBuilder.WithSubBusinessLineBuilder(query.SubBusinessLine);
            if (query.MaxItems.HasValue)
                maximoSiteRequestBuilder.WithMaxItems(query.MaxItems.Value);

            var request = maximoSiteRequestBuilder.Build();

            var result = await _httpService.ServiceCaller(request, _maximoConfig.Timeout);
            if (result.IsSuccessStatusCode)
            {
                var stringContent = await result.Content.ReadAsStringAsync();
                var woReponse = JsonConvert.DeserializeObject<SAP_R_LOCATIONS_LOCATIONSType>(stringContent);
                return woReponse;
            }
            var errorMessage = await result.Content.ReadAsStringAsync();
            throw new MaximoIntegrationException("Site", request, result.StatusCode.ToString(), errorMessage);
        }
    }
}