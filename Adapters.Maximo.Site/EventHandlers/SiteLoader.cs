#region Header

// Schlumberger Private
// Copyright 2020 Schlumberger.  All rights reserved in Schlumberger
// authored and generated code (including the selection and arrangement of
// the source code base regardless of the authorship of individual files),
// but not including any copyright interest(s) owned by a third party
// related to source code or object code authored or generated by
// non-Schlumberger personnel.
// This source code includes Schlumberger confidential and/or proprietary
// information and may include Schlumberger trade secrets. Any use,
// disclosure and/or reproduction is prohibited unless authorized in
// writing.

#endregion

using System.Threading.Tasks;
using Serilog;
using Tlm.Fed.Adapters.Maximo.Site.Concrete;
using Tlm.Fed.Framework.Common;
using Tlm.Fed.Framework.Common.Models;
using Tlm.Fed.Framework.Internal;
using Tlm.Sdk.Core.Models.Infrastructure;

namespace Tlm.Fed.Adapters.Maximo.Site.EventHandlers
{
    [ContextStrategy(ContextStrategy.SiteBySite)]
    [BulkLoader(CmmsId.Maximo, "Site", ContextStrategy.SiteBySite)]
    public sealed class SiteLoader : IDataLoader<SiteBasedLoadQuery>
    {
        public SiteLoader(IActionHandler<MaximoSiteQuery, CacheLoadInfo> maximoSite)
        {
            _maximoSites = maximoSite;
            _logger = Log.Logger.ForContext(GetType());
        }

        public async Task<CacheLoadInfo> LoadAsync(SiteBasedLoadQuery query)
        {
            _logger.Information($"Loading sites for site id: {query.CommaSeparatedSiteCodes}.");
            var siteQuery = MaximoSiteQuery.For(query.CommaSeparatedSiteCodes);
            var infoTemp = await _maximoSites.Handle(siteQuery);
            _logger.Debug("Sites loaded using maximo service inserting into database.");
            _logger.Information($"Sites loaded for site id: {query.CommaSeparatedSiteCodes}");
            return infoTemp;
        }

        private readonly ILogger _logger;
        private readonly IActionHandler<MaximoSiteQuery, CacheLoadInfo> _maximoSites;
    }
}