#region Header

// Schlumberger Private
// Copyright 2020 Schlumberger.  All rights reserved in Schlumberger
// authored and generated code (including the selection and arrangement of
// the source code base regardless of the authorship of individual files),
// but not including any copyright interest(s) owned by a third party
// related to source code or object code authored or generated by
// non-Schlumberger personnel.
// This source code includes Schlumberger confidential and/or proprietary
// information and may include Schlumberger trade secrets. Any use,
// disclosure and/or reproduction is prohibited unless authorized in
// writing.

#endregion

using System.Collections.Generic;
using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Tlm.Fed.Models.CrossDomain.Models.MasterData;
using Tlm.Sdk.Core.Models;
using Tlm.Sdk.Core.Models.Metadata;

namespace Tlm.Fed.Models.Canonical.MasterData
{
    [Key("{0:D}:{1}", @"^\d+:.+$", nameof(EpicType), nameof(Code))]
    [IsRoot()]
    public class EPICAttribute : Entity
    {
        public const string Version = "1.0";

        [JsonIgnore]
        public override string Id { get; set; }

        public string Code { get; set; }

        public string Name { get; set; }

        [JsonIgnore]
        [JsonConverter(typeof(StringEnumConverter))]
        [BsonRepresentation(BsonType.String)]
        public EquipmentClassificationType EpicType { get; set; }

        [JsonConverter(typeof(StringEnumConverter))]
        [BsonRepresentation(BsonType.String)]
        public EquipmentClassificationType Type { get; set; }

        [JsonIgnore]
        public List<string> Parents { get; set; } = new List<string>();

        public ReferenceObject ReferenceObject { get; set; }

        public List<EPICAttribute> Children { get; set; } = new List<EPICAttribute>();

        [JsonIgnore]
        public List<EquipmentSystemAttribute> Attributes { get; set; } = new List<EquipmentSystemAttribute>();
    }
}