#region Header

// Schlumberger Private
// Copyright 2020 Schlumberger.  All rights reserved in Schlumberger
// authored and generated code (including the selection and arrangement of
// the source code base regardless of the authorship of individual files),
// but not including any copyright interest(s) owned by a third party
// related to source code or object code authored or generated by
// non-Schlumberger personnel.
// This source code includes Schlumberger confidential and/or proprietary
// information and may include Schlumberger trade secrets. Any use,
// disclosure and/or reproduction is prohibited unless authorized in
// writing.

#endregion

using System;
using System.ComponentModel;
using Tlm.Sdk.Core.Models;

namespace Tlm.Fed.Models.Canonical.SiteDomain
{
    [TypeConverter(typeof(IdConverter<SiteCode>))]
    public class SiteCode : Id<SiteCode>, IEquatable<SiteCode>
    {
        public bool Equals(SiteCode other)
        {
            return Value == other.Value;
        }

        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj))
                return false;
            if (ReferenceEquals(this, obj))
                return true;
            if (obj.GetType() != GetType())
                return false;
            return Equals((SiteCode)obj);
        }

        public override int GetHashCode()
        {
            return Value?.GetHashCode() ?? 0;
        }

        public static bool operator ==(SiteCode left, SiteCode right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(SiteCode left, SiteCode right)
        {
            return !Equals(left, right);
        }

        public SiteCode()
        {}

        public SiteCode(string value) : base(value)
        {}

        public static implicit operator SiteCode(string value) => string.IsNullOrWhiteSpace(value) ? null : new SiteCode(value);
    }
}