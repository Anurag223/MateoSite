#region Header

// Schlumberger Private
// Copyright 2020 Schlumberger.  All rights reserved in Schlumberger
// authored and generated code (including the selection and arrangement of
// the source code base regardless of the authorship of individual files),
// but not including any copyright interest(s) owned by a third party
// related to source code or object code authored or generated by
// non-Schlumberger personnel.
// This source code includes Schlumberger confidential and/or proprietary
// information and may include Schlumberger trade secrets. Any use,
// disclosure and/or reproduction is prohibited unless authorized in
// writing.

#endregion

using System.Collections.Generic;
using Tlm.Sdk.Core.Models;
using Tlm.Sdk.Core.Models.Metadata;

namespace Tlm.Fed.Models.Canonical.SiteDomain
{
    [Key("{0:D}:{1}", @"^.\d+:.+$", nameof(ActiveCmmsId), nameof(Code))]
    [IsRoot()]
    public class WorkCenterSite : Site
    {
        public class ManagedAttributes
        {
            public const string OFSSTORE = "OFSStore";
            public const string ITTSTORE = "ITTStore";
            public const string USEDPARTSTORE = "UsedPartStore";
            public const string OPTIMUSSTORE = "OptimusStore";
            public const string SAPENABLED = "SapEnabled";
        }

        public const string SiteClassificationValueSlOrgBusinessView = "SLOrg_BusinessView";
        public const string SiteClassificationValueSlOrgDivisionView = "SLOrg_DivisionView";
        public const string SiteClassificationValueSlOrgBusinessTeam = "SLOrg_BusinessTeam";
        public const string SiteClassificationValueSlOrgBasinView = "SLOrg_BasinView";

        public ICollection<AlternateIdentity> AlternateIdentities { get; set; } = new List<AlternateIdentity>();

        public string FacilityId { get; set; }

        public string FacilityName { get; set; }

        public string SubGeoMarketCode { get; set; }

        public string GeoMarketCode { get; set; }

        public string SegmentCode { get; set; }

        public List<string> SubBusinessLines { get; set; } = new List<string>();

        public string SiteType { get; set; }

        public string Attribute { get; set; }

        public string CountryCode { get; set; }

        public string City { get; set; }

        public ICollection<WorkCenterSite> SubSites { get; set; }

        public string Country { get; set; }

        /// <summary>
        /// The field is specific to Maximo, based on it's value consumer will send for create/update WoTask WorkCenterAssignments
        /// </summary>
        public bool? UpdateWorkstation { get; set; }


    }
}