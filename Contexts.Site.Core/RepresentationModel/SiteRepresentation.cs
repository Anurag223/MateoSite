#region Header

// Schlumberger Private
// Copyright 2018 Schlumberger.  All rights reserved in Schlumberger
// authored and generated code (including the selection and arrangement of
// the source code base regardless of the authorship of individual files),
// but not including any copyright interest(s) owned by a third party
// related to source code or object code authored or generated by
// non-Schlumberger personnel.
// This source code includes Schlumberger confidential and/or proprietary
// information and may include Schlumberger trade secrets. Any use,
// disclosure and/or reproduction is prohibited unless authorized in
// writing.

#endregion

using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.Collections.Generic;
using Tlm.Sdk.Core.Models;
using Tlm.Sdk.Core.Models.Hypermedia;
using Tlm.Sdk.Core.Models.Metadata;
using Tlm.Sdk.Core.Models.Querying;
using Tlm.Fed.Models.Canonical.SiteDomain;

namespace Tlm.Fed.Contexts.Site.Core.RepresentationModel
{
    [KeyReference(typeof(WorkCenterSite))]
    [IsRoot(Version)]
    public class SiteRepresentation : AttributedCmmsTrackedResource
    {
        public const string Version = "1.0";

        /// <summary>
        ///		Site code unique identifier for each site within each CMMS system.
        /// </summary>
        [CanBeFilteredOn]
        public string Code { get; set; }

        /// <summary>
        ///		Description of site.
        /// </summary>
        public string Description { get; set; }

        /// <summary>
        ///		Name of site.
        /// </summary>
        public string Name { get; set; }

        public string Country { get; set; }
        /// <summary>
        /// Country Code
        /// </summary>
        public string CountryCode { get; set; }

        /// <summary>
        /// City
        /// </summary>
        public string City { get; set; }

        /// <summary>
		/// Describes site type
		/// </summary> 
		public string SiteType { get; set; }

        /// <summary>
        /// Describes corresponding facility
        /// </summary>
        [IncludeOnlyIfRequested]
        public FacilityRepresentation Facility { get; set; }

        /// <summary>
        ///  Describes Site Classification
        /// </summary>
        [IncludeOnlyIfRequested]
        public Dictionary<string, ICollection<Classification>> Classifications { get; set; }= new Dictionary<string, ICollection<Classification>>();

        /// <summary>
        /// Describes corresponding subsite
        /// </summary>
        [IncludeOnlyIfRequested]
        public ICollection<SiteRepresentation> SubSite { get; set; }

        /// <summary>
        /// Describes slb_workstation of Maximo. This field is only for Maximo and mapped to subSite.updateWorkstation in Mateo	
        /// </summary>
        public bool? UpdateWorkstation { get; set; }
    }
}
